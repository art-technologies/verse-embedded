{
  "version": 3,
  "sources": ["../src/loader.ts", "../src/index.ts"],
  "sourcesContent": ["export const createLoader = (): HTMLElement => {\n  const loader = document.createElement('div');\n  loader.style.cssText = `\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n    background: #f5f5f5;\n  `;\n\n  const spinner = document.createElement('div');\n  spinner.style.cssText = `\n    width: 40px;\n    height: 40px;\n    border: 4px solid #f3f3f3;\n    border-top: 4px solid #3498db;\n    border-radius: 50%;\n    animation: spin 1s linear infinite;\n  `;\n\n  const style = document.createElement('style');\n  style.textContent = `\n    @keyframes spin {\n      0% { transform: rotate(0deg); }\n      100% { transform: rotate(360deg); }\n    }\n  `;\n\n  document.head.appendChild(style);\n  loader.appendChild(spinner);\n  return loader;\n}; ", "import { createLoader } from './loader';\n\ninterface VerseEmbedOptions {\n  baseUrl?: string;\n  minHeight?: number;\n}\n\ntype IFrameMessage = {\n  type: 'resize';\n  bounds: {\n    height: number;\n  };\n} | {\n  type: 'fullScreenMode';\n  fullScreen: boolean;\n} | {\n  type: 'applyStyles';\n  styles: string;\n}\n\nclass VerseEmbed {\n  private baseUrl: string;\n  private minHeight: number;\n  private lastHeight: number = 0;\n  private isFullScreenMode: boolean = false;\n  private lastNormalHeight: number = 0;  // Store height before fullscreen\n\n  constructor(options: VerseEmbedOptions = {}) {\n    this.baseUrl = options.baseUrl || 'https://verse-webapp-git-feat-verse-embedded-poc-at-verse.vercel.app/artworks';\n    this.minHeight = options.minHeight || 400;\n    this.handleMessage = this.handleMessage.bind(this);\n  }\n\n  private handleFullScreenMessage(isFullScreen: boolean, event: MessageEvent): void {\n    console.log('Received full screen message:', isFullScreen);\n    this.isFullScreenMode = isFullScreen;\n\n    // Find the iframe that sent the message\n    const iframes = document.querySelectorAll('iframe');\n    const sourceIframe = Array.from(iframes).find(iframe => \n      iframe.contentWindow === event.source\n    );\n\n    if (sourceIframe) {\n      const container = sourceIframe.parentElement;\n      if (container) {\n        if (isFullScreen) {\n          // Store the current height before going fullscreen\n          this.lastNormalHeight = this.lastHeight;\n          \n          // Set fullscreen styles\n          container.style.position = 'fixed';\n          container.style.top = '0';\n          container.style.left = '0';\n          container.style.width = '100vw';\n          container.style.height = '100vh';\n          container.style.zIndex = '9999';\n          container.style.backgroundColor = 'white';\n        } else {\n          // Reset to initial state\n          container.style.position = 'relative';\n          container.style.top = '';\n          container.style.left = '';\n          container.style.width = '100%';\n          container.style.height = `${this.lastNormalHeight}px`;  // Restore the stored height\n          container.style.zIndex = '';\n          container.style.backgroundColor = '';\n        }\n      }\n    }\n  }\n\n  private handleMessage(event: MessageEvent): void {\n    // Verify the message is from our expected origin\n    if (event.origin !== new URL(this.baseUrl).origin) {\n      return;\n    }\n\n    try {\n      const message: IFrameMessage = event.data;\n      if (message.type === 'resize') {\n        // Ignore resize events during fullscreen mode\n        if (this.isFullScreenMode) {\n          return;\n        }\n        \n        // Find the iframe that sent the message\n        const iframes = document.querySelectorAll('iframe');\n        const sourceIframe = Array.from(iframes).find(iframe => \n          iframe.contentWindow === event.source\n        );\n        \n        if (sourceIframe) {\n          const container = sourceIframe.parentElement;\n          if (container) {\n            console.log('Received resize message:', message);\n            // Only ensure minimum height\n            const height = Math.max(message.bounds.height, this.minHeight);\n\n            // Only update if height has changed\n            if (this.lastHeight !== height) {\n              console.log('Updating iframe height to:', height);\n              this.lastHeight = height;\n              this.lastNormalHeight = height;  // Store the normal height\n              container.style.height = `${height}px`;\n              sourceIframe.style.height = `${height}px`;\n            }\n          }\n        }\n      } else if (message.type === 'fullScreenMode' && typeof message.fullScreen === 'boolean') {\n        this.handleFullScreenMessage(message.fullScreen, event);\n      }\n    } catch (e) {\n      console.error('Error handling iframe message:', e);\n    }\n  }\n\n  private createIframe(artworkId: string): HTMLIFrameElement {\n    const iframe = document.createElement('iframe');\n    iframe.src = `${this.baseUrl}/${artworkId}?iframe=true`;\n    iframe.style.cssText = `\n      width: 100%;\n      height: 100%;\n      border: none;\n      overflow: hidden;\n      scrolling: no;\n    `;\n    iframe.setAttribute('scrolling', 'no');\n    return iframe;\n  }\n\n  private async loadCustomStyles(stylesPath: string): Promise<string> {\n    try {\n      const response = await fetch(stylesPath);\n      if (!response.ok) {\n        throw new Error(`Failed to load styles: ${response.status}`);\n      }\n      return await response.text();\n    } catch (error) {\n      console.error('Error loading custom styles:', error);\n      return '';\n    }\n  }\n\n  private async initializeContainer(container: HTMLElement): Promise<void> {\n    const artworkId = container.getAttribute('verse-artwork-id');\n    if (!artworkId) {\n      console.error('Container missing verse-artwork-id attribute');\n      return;\n    }\n\n    // Set container styles\n    container.style.cssText = `\n      position: relative;\n      width: 100%;\n      min-height: ${this.minHeight}px;\n      overflow: hidden;\n    `;\n\n    // Add loader\n    const loader = createLoader();\n    container.appendChild(loader);\n\n    // Create iframe\n    const iframe = this.createIframe(artworkId);\n    \n    // Load custom styles if specified\n    const stylesPath = container.getAttribute('verse-custom-styles-path');\n    let customStyles = '';\n    if (stylesPath) {\n      customStyles = await this.loadCustomStyles(stylesPath);\n    }\n\n    // Add iframe to container\n    container.appendChild(iframe);\n\n    // Wait for iframe to load and apply styles\n    await new Promise<void>((resolve) => {\n      iframe.onload = () => {\n        if (customStyles) {\n          iframe.contentWindow?.postMessage({\n            type: 'applyStyles',\n            styles: customStyles\n          }, new URL(this.baseUrl).origin);\n        }\n        container.removeChild(loader);\n        resolve();\n      };\n    });\n  }\n\n  public initialize(): void {\n    // Add message event listener\n    window.addEventListener('message', this.handleMessage);\n    \n    const containers = document.querySelectorAll<HTMLElement>('[verse-artwork-id]');\n    containers.forEach(container => this.initializeContainer(container));\n  }\n}\n\n// Initialize automatically when script is loaded\nconst verseEmbed = new VerseEmbed();\nverseEmbed.initialize(); "],
  "mappings": "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",
  "names": ["createLoader", "loader", "spinner", "style", "VerseEmbed", "options", "isFullScreen", "event", "iframes", "sourceIframe", "iframe", "container", "message", "height", "artworkId", "stylesPath", "response", "error", "loader", "createLoader", "customStyles", "resolve", "verseEmbed"]
}
