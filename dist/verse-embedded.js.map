{
  "version": 3,
  "sources": ["../src/loader.ts", "../src/index.ts"],
  "sourcesContent": ["export const createLoader = (): HTMLElement => {\n  const loader = document.createElement('div');\n  loader.style.cssText = `\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n    background: #f5f5f5;\n  `;\n\n  const spinner = document.createElement('div');\n  spinner.style.cssText = `\n    width: 40px;\n    height: 40px;\n    border: 4px solid #f3f3f3;\n    border-top: 4px solid #3498db;\n    border-radius: 50%;\n    animation: spin 1s linear infinite;\n  `;\n\n  const style = document.createElement('style');\n  style.textContent = `\n    @keyframes spin {\n      0% { transform: rotate(0deg); }\n      100% { transform: rotate(360deg); }\n    }\n  `;\n\n  document.head.appendChild(style);\n  loader.appendChild(spinner);\n  return loader;\n}; ", "import { createLoader } from './loader';\n\ninterface VerseEmbedOptions {\n  baseUrl?: string;\n  minHeight?: number;\n}\n\ninterface IframeMessage {\n  type: 'resize';\n  height: number;\n}\n\nclass VerseEmbed {\n  private baseUrl: string;\n  private minHeight: number;\n  private lastHeight: number = 0;\n\n  constructor(options: VerseEmbedOptions = {}) {\n    this.baseUrl = options.baseUrl || 'https://verse-webapp-git-feat-verse-embedded-poc-at-verse.vercel.app/artworks';\n    this.minHeight = options.minHeight || 400;\n    this.handleMessage = this.handleMessage.bind(this);\n  }\n\n  private handleMessage(event: MessageEvent): void {\n    // Verify the message is from our expected origin\n    if (event.origin !== new URL(this.baseUrl).origin) {\n      return;\n    }\n\n    try {\n      const message: IframeMessage = event.data;\n      if (message.type === 'resize' && typeof message.height === 'number') {\n        console.log('Received height update:', message.height);\n        \n        // Find the iframe that sent the message\n        const iframes = document.querySelectorAll('iframe');\n        const sourceIframe = Array.from(iframes).find(iframe => \n          iframe.contentWindow === event.source\n        );\n        \n        if (sourceIframe) {\n          const container = sourceIframe.parentElement;\n          if (container) {\n            // Only ensure minimum height\n            const height = Math.max(message.height, this.minHeight);\n\n            // Only update if height has changed\n            if (this.lastHeight !== height) {\n              console.log('Updating iframe height to:', height);\n              this.lastHeight = height;\n              container.style.height = `${height}px`;\n              sourceIframe.style.height = `${height}px`;\n            }\n          }\n        }\n      }\n    } catch (e) {\n      console.error('Error handling iframe message:', e);\n    }\n  }\n\n  private createIframe(artworkId: string): HTMLIFrameElement {\n    const iframe = document.createElement('iframe');\n    iframe.src = `${this.baseUrl}/${artworkId}`;\n    iframe.style.cssText = `\n      width: 100%;\n      height: 100%;\n      border: none;\n      overflow: hidden;\n      scrolling: no;\n    `;\n    iframe.setAttribute('scrolling', 'no');\n    return iframe;\n  }\n\n  private initializeContainer(container: HTMLElement): void {\n    const artworkId = container.getAttribute('verse-artwork-id');\n    if (!artworkId) {\n      console.error('Container missing verse-artwork-id attribute');\n      return;\n    }\n\n    // Set container styles\n    container.style.cssText = `\n      position: relative;\n      width: 100%;\n      min-height: ${this.minHeight}px;\n      overflow: hidden;\n    `;\n\n    // Add loader\n    const loader = createLoader();\n    container.appendChild(loader);\n\n    // Create and add iframe\n    const iframe = this.createIframe(artworkId);\n    iframe.onload = () => {\n      container.removeChild(loader);\n    };\n    container.appendChild(iframe);\n  }\n\n  public initialize(): void {\n    // Add message event listener\n    window.addEventListener('message', this.handleMessage);\n    \n    const containers = document.querySelectorAll<HTMLElement>('[verse-artwork-id]');\n    containers.forEach(container => this.initializeContainer(container));\n  }\n}\n\n// Initialize automatically when script is loaded\nconst verseEmbed = new VerseEmbed();\nverseEmbed.initialize(); "],
  "mappings": "mBAAO,IAAMA,EAAe,IAAmB,CAC7C,IAAMC,EAAS,SAAS,cAAc,KAAK,EAC3CA,EAAO,MAAM,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASvB,IAAMC,EAAU,SAAS,cAAc,KAAK,EAC5CA,EAAQ,MAAM,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IASxB,IAAMC,EAAQ,SAAS,cAAc,OAAO,EAC5C,OAAAA,EAAM,YAAc;AAAA;AAAA;AAAA;AAAA;AAAA,IAOpB,SAAS,KAAK,YAAYA,CAAK,EAC/BF,EAAO,YAAYC,CAAO,EACnBD,CACT,ECpBA,IAAMG,EAAN,KAAiB,CAKf,YAAYC,EAA6B,CAAC,EAAG,CAF7C,KAAQ,WAAqB,EAG3B,KAAK,QAAUA,EAAQ,SAAW,gFAClC,KAAK,UAAYA,EAAQ,WAAa,IACtC,KAAK,cAAgB,KAAK,cAAc,KAAK,IAAI,CACnD,CAEQ,cAAcC,EAA2B,CAE/C,GAAIA,EAAM,SAAW,IAAI,IAAI,KAAK,OAAO,EAAE,OAI3C,GAAI,CACF,IAAMC,EAAyBD,EAAM,KACrC,GAAIC,EAAQ,OAAS,UAAY,OAAOA,EAAQ,QAAW,SAAU,CACnE,QAAQ,IAAI,0BAA2BA,EAAQ,MAAM,EAGrD,IAAMC,EAAU,SAAS,iBAAiB,QAAQ,EAC5CC,EAAe,MAAM,KAAKD,CAAO,EAAE,KAAKE,GAC5CA,EAAO,gBAAkBJ,EAAM,MACjC,EAEA,GAAIG,EAAc,CAChB,IAAME,EAAYF,EAAa,cAC/B,GAAIE,EAAW,CAEb,IAAMC,EAAS,KAAK,IAAIL,EAAQ,OAAQ,KAAK,SAAS,EAGlD,KAAK,aAAeK,IACtB,QAAQ,IAAI,6BAA8BA,CAAM,EAChD,KAAK,WAAaA,EAClBD,EAAU,MAAM,OAAS,GAAGC,CAAM,KAClCH,EAAa,MAAM,OAAS,GAAGG,CAAM,KAEzC,CACF,CACF,CACF,OAAS,EAAG,CACV,QAAQ,MAAM,iCAAkC,CAAC,CACnD,CACF,CAEQ,aAAaC,EAAsC,CACzD,IAAMH,EAAS,SAAS,cAAc,QAAQ,EAC9C,OAAAA,EAAO,IAAM,GAAG,KAAK,OAAO,IAAIG,CAAS,GACzCH,EAAO,MAAM,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAOvBA,EAAO,aAAa,YAAa,IAAI,EAC9BA,CACT,CAEQ,oBAAoBC,EAA8B,CACxD,IAAME,EAAYF,EAAU,aAAa,kBAAkB,EAC3D,GAAI,CAACE,EAAW,CACd,QAAQ,MAAM,8CAA8C,EAC5D,MACF,CAGAF,EAAU,MAAM,QAAU;AAAA;AAAA;AAAA,oBAGV,KAAK,SAAS;AAAA;AAAA,MAK9B,IAAMG,EAASC,EAAa,EAC5BJ,EAAU,YAAYG,CAAM,EAG5B,IAAMJ,EAAS,KAAK,aAAaG,CAAS,EAC1CH,EAAO,OAAS,IAAM,CACpBC,EAAU,YAAYG,CAAM,CAC9B,EACAH,EAAU,YAAYD,CAAM,CAC9B,CAEO,YAAmB,CAExB,OAAO,iBAAiB,UAAW,KAAK,aAAa,EAElC,SAAS,iBAA8B,oBAAoB,EACnE,QAAQC,GAAa,KAAK,oBAAoBA,CAAS,CAAC,CACrE,CACF,EAGMK,EAAa,IAAIZ,EACvBY,EAAW,WAAW",
  "names": ["createLoader", "loader", "spinner", "style", "VerseEmbed", "options", "event", "message", "iframes", "sourceIframe", "iframe", "container", "height", "artworkId", "loader", "createLoader", "verseEmbed"]
}
